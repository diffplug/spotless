import static java.lang.System.getenv

apply plugin: 'net.ltgt.errorprone'

dependencies {
	errorprone('com.google.errorprone:error_prone_core:2.42.0')
	errorprone('tech.picnic.error-prone-support:error-prone-contrib:0.25.0')
}

tasks.withType(JavaCompile).configureEach {
	options.errorprone {
		disable( // not patchable
				'FormatStringConcatenation',
				'FunctionalInterfaceMethodChanged',
				'JavaxInjectOnAbstractMethod',
				'OverridesJavaxInjectableMethod',
				'ReturnValueIgnored',
				'Slf4jLogStatement',
				'MissingSummary',
				// patchable
				'LexicographicalAnnotationAttributeListing',
				'LexicographicalAnnotationListing',
				'NonStaticImport',
				'Slf4jLoggerDeclaration', // logger -> log
				'StaticImport',
				)
		error(
				'AmbiguousJsonCreator',
				'AssertJNullnessAssertion',
				'AutowiredConstructor',
				'CanonicalAnnotationSyntax',
				'CollectorMutability',
				'ConstantNaming',
				'DirectReturn',
				'EmptyMethod',
				'ExplicitArgumentEnumeration',
				'ExplicitEnumOrdering',
				'IdentityConversion',
				'ImmutablesSortedSetComparator',
				'IsInstanceLambdaUsage',
				'MockitoMockClassReference',
				'MockitoStubbing',
				'NestedOptionals',
				'PrimitiveComparison',
				'RedundantStringConversion',
				'RedundantStringEscape',
				'SelfAssignment',
				'StringJoin',
				'StringJoining',
				'Unused',
				'UnusedMethod',
				'UnusedParameters',
				'UnusedVariable'
				)
		// fixme bug: this only happens when the file is dirty!
		// up2date checking (caching) must consider file changes, as file is currently corrupt!
		// fix SelfTest.java:L22 ForbidGradleInternal(import org.gradle.api.internal.project.ProjectInternal;)
//		errorproneArgs.add('-XepExcludedPaths:.*/SelfTest.java|.*/EclipseJdtFormatterStepTeeeest.java|.*/JvmTest.java')
		errorproneArgs.add('-XepExcludedPaths:.*/SelfTest.java')
		// bug https://github.com/google/error-prone/issues/5289
		errorproneArgs.add('-XepExcludedPaths:.*/EclipseJdtFormatterStepTest.java')
		errorproneArgs.add('-XepExcludedPaths:.*/JvmTest.java')
		if (!getenv().containsKey('CI') && getenv('IN_PLACE')?.toBoolean()) {
			errorproneArgs.addAll(
					'-XepPatchLocation:IN_PLACE',
					'-XepPatchChecks:' +
					'AmbiguousJsonCreator,' +
					'ArrayEquals,' +
					'AssertJNullnessAssertion,' +
					'AutowiredConstructor,' +
					'CanonicalAnnotationSyntax,' +
					'CollectorMutability,' +
					'ConstantNaming,' +
					'DirectReturn,' +
					'EmptyMethod,' +
					'ExplicitArgumentEnumeration,' +
					'ExplicitEnumOrdering,' +
					'FormatStringConcatenation,' +
					'IdentityConversion,' +
					'ImmutablesSortedSetComparator,' +
					'IsInstanceLambdaUsage,' +
					'MockitoMockClassReference,' +
					'MockitoStubbing,' +
					'NestedOptionals,' +
					'PrimitiveComparison,' +
					'RedundantStringConversion,' +
					'RedundantStringEscape,' +
					'SelfAssignment,' +
					'Slf4jLogStatement,' +
					'StringJoin,' +
					'StringJoining,' +
					'TimeZoneUsage,' +
					'UnusedMethod,' +
					'UnusedParameters,' +
					'UnusedVariable,'
					)
		}
	}
}
