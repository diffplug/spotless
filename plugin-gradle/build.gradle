ext.artifactId = project.artifactIdGradle
ext.version = project.versionGradle
apply from: rootProject.file('gradle/java-setup.gradle')
apply from: rootProject.file('gradle/java-publish.gradle')

apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'java-gradle-plugin'

dependencies {
	if (!project.versionGradle.endsWith('-SNAPSHOT') && project.versionLib.endsWith('-SNAPSHOT')) {
		// gradle = release, lib = snapshot, therefore gradle should depend on the last stable lib
		compile "com.diffplug.spotless:spotless-lib:${project.stableLib}"
		compile "com.diffplug.spotless:spotless-lib-extra:${project.stableLib}"
	} else {
		compile project(':lib')
		compile project(':lib-extra')
	}
	compile "com.diffplug.durian:durian-core:${VER_DURIAN}"
	compile "com.diffplug.durian:durian-io:${VER_DURIAN}"

	testCompile project(':testlib')
	testCompile "junit:junit:${VER_JUNIT}"
	testCompile "org.assertj:assertj-core:${VER_ASSERTJ}"
	testCompile "com.diffplug.durian:durian-testlib:${VER_DURIAN}"
}

tasks.eclipse.dependsOn(pluginUnderTestMetadata)

/////////////////////
// SPOTLESS (fake) //
/////////////////////
task spotlessCheck(type: JavaExec) {
	classpath sourceSets.test.runtimeClasspath
	main = 'com.diffplug.gradle.spotless.SelfTestCheck'
}
check.dependsOn(spotlessCheck)

task spotlessApply(type: JavaExec) {
	classpath sourceSets.test.runtimeClasspath
	main = 'com.diffplug.gradle.spotless.SelfTestApply'
}
test { testLogging.showStandardStreams = true }

test { useJUnit { excludeCategories 'com.diffplug.spotless.category.NpmTest' } }

task npmTest(type: Test) { useJUnit { includeCategories 'com.diffplug.spotless.category.NpmTest' } }

//////////////////////////
// GRADLE PLUGIN PORTAL //
//////////////////////////
version = project.ext.version
pluginBundle {
	// These settings are set for the whole plugin bundle
	website = "https://github.com/diffplug/spotless"
	vcsUrl = "https://github.com/diffplug/spotless"
	description = project.description

	plugins {
		spotlessPlugin {
			id = 'com.diffplug.gradle.spotless'
			displayName = 'Spotless formatting plugin'
			tags = [
				'format',
				'style',
				'license',
				'header'
			]
		}
	}

	mavenCoordinates {
		groupId = project.group
		artifactId = project.artifactIdGradle
		version = project.ext.version
	}
}

// the gradle plugin portal isn't really compatible with SNAPSHOT versions
// https://discuss.gradle.org/t/uploading-snapshot-versions-to-the-plugin-portal/11347
if (ext.isSnapshot) {
	publishPlugins.enabled = false
}
