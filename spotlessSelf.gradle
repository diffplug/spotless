buildscript { repositories { jcenter() } }

// applied by SelfTest
plugins {
	id 'com.diffplug.gradle.spotless'
	id 'java'
}

repositories { jcenter() }
spotless {
	def noInternalDepsClosure = {
		String text = it
		/*
		 * No good way to get around using this import:
		 * https://github.com/gradle/gradle/issues/3191
		 */
		String regex = "import org\\.gradle\\.api\\.internal\\.(?!plugins\\.DslObject)"
		if ((text.contains('import org.gradle.internal.') || text.find(regex)) &&
		!text.contains('def noInternalDepsClosure')) {
			throw new AssertionError("Accidental internal import")
		}
	}
	java {
		target fileTree('.') {
			include '**/*.java'
			exclude '_ext/*/build/**'
		}
		custom 'noInternalDeps', noInternalDepsClosure
		bumpThisNumberIfACustomStepChanges(1)
		licenseHeaderFile 'spotless.license'
		importOrderFile   'spotless.importorder'
		eclipse().configFile 'spotless.eclipseformat.xml'
		trimTrailingWhitespace()
		removeUnusedImports()
	}
	groovyGradle {
		target fileTree('.') {
			include '**/*.gradle'
			exclude '_ext/**'
		}
		paddedCell()
		custom 'noInternalDeps', noInternalDepsClosure
		bumpThisNumberIfACustomStepChanges(3)
		greclipse().configFile('spotless.eclipseformat.xml', 'spotless.groovyformat.prefs')
	}
	xml {
		target fileTree('.') {
			include com.diffplug.spotless.xml.XmlDefaults.FILE_FILTER
			exclude '**/build/**'
		}
		eclipse().configFile 'spotless.xmlformat.prefs'
	}
	freshmark {
		target '**/*.md'
		propertiesFile('gradle.properties')
		properties {
			it.put('yes', ':+1:')
			it.put('no', ':white_large_square:')
		}
	}
	format 'misc', {
		target '**/*.md', '**/*.gitignore'
		indentWithSpaces(2)
		trimTrailingWhitespace()
		endWithNewline()
	}
}
